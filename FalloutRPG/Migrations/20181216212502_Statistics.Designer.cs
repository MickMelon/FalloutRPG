// <auto-generated />
using System;
using FalloutRPG.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FalloutRPG.Migrations
{
    [DbContext(typeof(RpgContext))]
    [Migration("20181216212502_Statistics")]
    partial class Statistics
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.2-rtm-30932");

            modelBuilder.Entity("FalloutRPG.Models.Character", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<string>("Description");

                    b.Property<ulong>("DiscordId");

                    b.Property<int>("Experience");

                    b.Property<int>("ExperiencePoints");

                    b.Property<bool>("IsReset");

                    b.Property<int>("Level");

                    b.Property<long>("Money");

                    b.Property<string>("Name");

                    b.Property<int>("SpecialPoints");

                    b.Property<string>("Story");

                    b.Property<int>("TagPoints");

                    b.HasKey("Id");

                    b.ToTable("Characters");
                });

            modelBuilder.Entity("FalloutRPG.Models.Effects.Effect", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.Property<ulong>("OwnerId");

                    b.HasKey("Id");

                    b.ToTable("Effects");
                });

            modelBuilder.Entity("FalloutRPG.Models.Effects.EffectCharacter", b =>
                {
                    b.Property<int>("EffectId");

                    b.Property<int>("CharacterId");

                    b.HasKey("EffectId", "CharacterId");

                    b.HasIndex("CharacterId");

                    b.ToTable("EffectCharacter");
                });

            modelBuilder.Entity("FalloutRPG.Models.NpcPreset", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Enabled");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("NpcPresets");
                });

            modelBuilder.Entity("FalloutRPG.Models.Statistic", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Aliases");

                    b.Property<string>("Description");

                    b.Property<string>("Discriminator")
                        .IsRequired();

                    b.Property<string>("Name");

                    b.Property<int>("StatisticFlag");

                    b.HasKey("Id");

                    b.ToTable("Statistic");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Statistic");
                });

            modelBuilder.Entity("FalloutRPG.Models.StatisticValue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("CharacterId");

                    b.Property<int?>("EffectId");

                    b.Property<int?>("NpcPresetId");

                    b.Property<int>("StatisticId");

                    b.Property<int>("Value");

                    b.HasKey("Id");

                    b.HasIndex("CharacterId");

                    b.HasIndex("EffectId");

                    b.HasIndex("NpcPresetId");

                    b.HasIndex("StatisticId");

                    b.ToTable("StatisticValue");
                });

            modelBuilder.Entity("FalloutRPG.Models.Skill", b =>
                {
                    b.HasBaseType("FalloutRPG.Models.Statistic");

                    b.Property<int>("MinimumValue");

                    b.Property<int?>("SpecialId");

                    b.HasIndex("SpecialId");

                    b.ToTable("Skill");

                    b.HasDiscriminator().HasValue("Skill");
                });

            modelBuilder.Entity("FalloutRPG.Models.Special", b =>
                {
                    b.HasBaseType("FalloutRPG.Models.Statistic");


                    b.ToTable("Special");

                    b.HasDiscriminator().HasValue("Special");
                });

            modelBuilder.Entity("FalloutRPG.Models.Effects.EffectCharacter", b =>
                {
                    b.HasOne("FalloutRPG.Models.Character", "Character")
                        .WithMany("EffectCharacters")
                        .HasForeignKey("CharacterId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("FalloutRPG.Models.Effects.Effect", "Effect")
                        .WithMany("EffectCharacters")
                        .HasForeignKey("EffectId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("FalloutRPG.Models.StatisticValue", b =>
                {
                    b.HasOne("FalloutRPG.Models.Character")
                        .WithMany("Statistics")
                        .HasForeignKey("CharacterId");

                    b.HasOne("FalloutRPG.Models.Effects.Effect")
                        .WithMany("StatisticEffects")
                        .HasForeignKey("EffectId");

                    b.HasOne("FalloutRPG.Models.NpcPreset")
                        .WithMany("Statistics")
                        .HasForeignKey("NpcPresetId");

                    b.HasOne("FalloutRPG.Models.Statistic", "Statistic")
                        .WithMany()
                        .HasForeignKey("StatisticId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("FalloutRPG.Models.Skill", b =>
                {
                    b.HasOne("FalloutRPG.Models.Special", "Special")
                        .WithMany()
                        .HasForeignKey("SpecialId");
                });
#pragma warning restore 612, 618
        }
    }
}
